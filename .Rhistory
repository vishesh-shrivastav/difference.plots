Visits = c(19970, 14450, 12419))
old.y <- list(
side = "left",
title = "Spend",
)
new.y <- list(
overlaying = "y",
side = "right",
title = "Visits"
)
#plot_ly(df, x = ~MediaDate, y = ~Spend, type = "lines") %>%
plot_ly(df) %>%
add_lines(x = ~MediaDate, y = ~Spend, yaxis="y1") %>%
add_trace(x = ~MediaDate, y = ~Visits, mode = "lines", yaxis = "y2") %>%
layout(
yaxis2 = new.y, yaxis = old.y, xaxis = list(title="x"))
source('~/SO19.R')
source('~/SO19.R')
df <- data.frame(MediaDate = as.Date(c("2016-04-01","2016-05-01","2016-06-01"),
format = "%Y-%m-%d"),
Spend = c(39654, 34446, 27402),
Visits = c(19970, 14450, 12419))
old.y <- list(
side = "left",
title = "Spend"
)
new.y <- list(
overlaying = "y",
side = "right",
title = "Visits"
)
#plot_ly(df, x = ~MediaDate, y = ~Spend, type = "lines") %>%
plot_ly(df) %>%
add_lines(x = ~MediaDate, y = ~Spend, yaxis="y1") %>%
add_trace(x = ~MediaDate, y = ~Visits, mode = "lines", yaxis = "y2") %>%
layout(
yaxis2 = new.y, yaxis = old.y, xaxis = list(title="x"))
df <- data.frame(MediaDate = as.Date(c("2016-04-01","2016-05-01","2016-06-01"),
format = "%Y-%m-%d"),
Spend = c(39654, 34446, 27402),
Visits = c(19970, 14450, 12419))
old.y <- list(
side = "left",
title = "Spend"
)
new.y <- list(
overlaying = "y",
side = "right",
title = "Visits"
)
#plot_ly(df, x = ~MediaDate, y = ~Spend, type = "lines") %>%
plot_ly(df) %>%
add_lines(x = ~MediaDate, y = ~Spend, yaxis="y1") %>%
add_lines(x = ~MediaDate, y = ~Visits, yaxis = "y2") %>%
layout(
yaxis2 = new.y, yaxis = old.y, xaxis = list(title="x"))
df <- data.frame(MediaDate = as.Date(c("2016-04-01","2016-05-01","2016-06-01"),
format = "%Y-%m-%d"),
Spend = c(39654, 34446, 27402),
Visits = c(19970, 14450, 12419))
old.y <- list(
side = "left",
title = "Spend"
)
new.y <- list(
overlaying = "y",
side = "right",
title = "Visits"
)
#plot_ly(df, x = ~MediaDate, y = ~Spend, type = "lines") %>%
plot_ly(df) %>%
add_lines(x = ~MediaDate, y = ~Spend, yaxis="y1") %>%
add_lines(x = ~MediaDate, y = ~Visits, yaxis = "y2") %>%
layout(
yaxis2 = new.y, yaxis = old.y, xaxis = list(title="MediaDate"))
df <- data.frame(MediaDate = as.Date(c("2016-04-01","2016-05-01","2016-06-01"),
format = "%Y-%m-%d"),
Spend = c(39654, 34446, 27402),
Visits = c(19970, 14450, 12419))
old.y <- list(
side = "left",
title = "Spend"
)
new.y <- list(
overlaying = "y",
side = "right",
title = "Visits"
)
#plot_ly(df, x = ~MediaDate, y = ~Spend, type = "lines") %>%
plot_ly(df) %>%
add_lines(x = ~MediaDate, y = ~Spend, yaxis="y1", name = "Spend") %>%
add_lines(x = ~MediaDate, y = ~Visits, yaxis = "y2", name = "Visits") %>%
layout(
yaxis2 = new.y, yaxis = old.y, xaxis = list(title="MediaDate"))
date <- c(1/2/18, 1/3/18, 1/4/18, 1/2/18, 1/3/18, 1/4/18)
code <- c("ABC","ABC","ABC","DEF","DEF","DEF")
closePrice <- c(3,3.01,3.02,3,3.03,3.04)
volume <- c(300, 301, 302, 305, 308, 309)
company <- c("ABC Co", "ABC Co", "ABC Co", "DEF Co", "DEF Co", "ABC Co")
stocks <- cbind.data.frame(date, code, closePrice, volume, company)
stocks
stocks <- cbind.data.frame(as.Date(date), code, closePrice, volume, company)
stocks <- cbind.data.frame(as.Date.character(date), code, closePrice, volume, company)
stocks <- cbind.data.frame(as.Date.numeric(date), code, closePrice, volume, company)
date <- c("1/2/18", "1/3/18", "1/4/18", "1/2/18", "1/3/18", "1/4/18")
stocks <- cbind.data.frame(as.Date.character(date), code, closePrice, volume, company)
stocks
colnames(stocks) <- c("date", "code", "closePrice", "volume", "company")
stocks
dput(stocks)
library(shiny); runApp('so20.R')
View(stocks)
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
runApp('so20.R')
library(shiny); runApp('so25.R')
install.packages("shinyWidgets")
runApp('so25.R')
install.packages("DT")
runApp('so25.R')
library(shiny); runApp('so30.R')
runApp('so30.R')
?paste
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
runApp('so30.R')
2 ^ 4
2 ^ 4
View(loans)
library(shiny); runApp('so_31.R')
runApp('so_31.R')
runApp('so_31.R')
runApp('so_31.R')
runApp('so_31.R')
runApp('so_31.R')
m <- 55
refs(m)
??refs
View(trees)
library(shiny); runApp('soo.R')
runApp('soo.R')
runApp('soo.R')
runApp('soo.R')
runApp('soo.R')
runApp('soo.R')
runApp('soo.R')
runApp('soo.R')
1085/(1085 + 55623)
703/(703 + 4414239)
703/(1085 + 703)
4414239/(55623 + 4414239)
441239/(55623 + 441239)
0.0191331 -  0.001590706
0.0191331 / 0.001590706
(0.0191331/(1 - 0.0191331))/(0.001590706/(1 - 0.001590706))
2.9/(1 + 2.9)
p1 = 2.9/(1 + 2.9)
11.4 * (1 - pi1)/pi1
11.4 * (1 - p1)/p1
b = 11.4 * (1 - p1)/p1
1/(1 + b)
install.packages(shinyFiles)
install.packages("shinyFiles")
install.packages("shinyFiles")
library(shiny); source('so_32.R')
source('so_32.R')
source('so_32.R')
mpg
colnames(mtcars)
mtcars[, c("cyl", "disp")]
mtcars[, 2:3]
mtcars[, -1:3]
mtcars[, names(mtcars)[4:5]]
mtcars[, colnames(mtcars)[4:5]]
dates <- c("2015-07-29 11:35:20", "Sep-18")
dd <- as.Date(dates)
dd
dates <- c("2015/07/29 11:35:20", "Sep-18")
dd
dd <- as.Date(dates)
dd
dates <- c("01/25/18", "Sep-18")
dd <- as.Date(dates)
dddd <- "01/25/18"
as.Date(dddd)
xx <- "Sep-18"
as.Date(xx)
as.Date(dddd, "%m%d%y")
dates <- c("05/27/84", "07/07/05", "01/25/2018")
betterDates <- as.Date(dates, "%m/%d/%y")
betterDates
dates1 <- c("05/27/84", "07/07/1005", "01/25/2018")
betterDates <- as.Date(dates1, "%m/%d/%y")
betterDates
ff <- "Sep-18"
as.Date(ff, "%B-%d")
dates <- c("2015-07-29 11:35:20", "Sep-18")
as.Date(dates)
dates <- c("2018/07/29", "Sep-18")
as.Date(dates)
dates <- c("01/25/2018", "Sep-18")
as.Date(dates, "%d/%m/%y")
View(precip)
data("precip")
xx <- data("precip")
xx
xx <- data(precip)
xx
head(precip)
precip
xx <- subset(precip, rowname == "Mobile")
xx <- subset(precip, "Mobile")
colnames(precip)
precip["Mobile"]
rownames(precip)
rownames(precip)
precip["Mobile"]
precip["Denver"]
names(precip)
xx <- subset(precip, c("r", "a", "i", "n") %in% names(precip))
xx
View(xx)
xx <- subset(precip, "r" %in% names(precip))
xx
Corsenumber <- C(11225, 22553, 28945, 55415)
Corsenumber <- c(11225, 22553, 28945, 55415)
Difficulty <- c(4,4,3,1)
dat <- cbind(Corsenumber, Difficulty)
dat
dat %>% subset(Difficulty == 4)
library(dplyr)
dat %>% subset(Difficulty == 4)
dat %>% filter(Difficulty == 4)
dat <- cbind.data.frame(Corsenumber, Difficulty)
dat %>% filter(Difficulty == 4)
dat %>% show(Difficulty == 4)
dat > show(Difficulty == 4)
?show
dat %>% show(Difficulty == 4)
?plm
vignette(package = "plm")
install.packages(plm)
install.packages("plm")
vignette(package = "plm")
d1 <- rnorm(mean = 5, sd = 2)
d1 <- rnorm(n = 10, mean = 5, sd = 2)
d1
d1 <- rnorm(n = 10, mean = 5, sd = 2)
d1
rpois(5)
y <- rnorm(mean = 0, sd = 1)
y <- rnorm(n = 5, mean = 0, sd = 1)
y
y <- rnorm(n = 5, mean = 0, sd = 1)
y
?test.table
??test.table
source('C:/Users/Shrivatav/Desktop/UMN/Homework/Fall 2018/Analysis of Categorical Data/Homework 3/contingencytable-code.r')
ct = as.table( rbind(c(28, 656), c(18, 658)) )
ct
rownames(ct) = c("Placebo", "Aspirin")
colnames(ct) = c("Yes", "No")
ct
ct[1,1]*ct[2,2]/(ct[2,1]*ct[1,2])
log(ct[1,1]*ct[2,2]/(ct[2,1]*ct[1,2]))
sor=function(ct)
{
val=ct[1,1]*ct[2,2]/(ct[2,1]*ct[1,2])
return(val)
}
sor(ct)
log(sor(ct))
samp.lor=log(sor(ct))
moe=qnorm(0.975)*sqrt(sum(1/ct))
CI = c(samp.lor - moe, samp.lor + moe)
CI
exp(CI)
ct = as.table( rbind(c(9, 8, 27, 8, 47, 236), c(23, 39, 88, 49, 179, 706),
c(28, 48, 89, 19, 104, 293) ))
colnames(ct)=c("B1", "B2", "B3", "B4", "B5", "B6")
rownames(ct)=c("LH", "HJC", "BG")
ct
chisq.test(ct, correct=FALSE)
expected = apply(ct, 1, sum) %o% apply(ct, 2, sum) / sum(ct)
g.sq = 2*sum( ct * log(ct/expected) )
g.sq
p.val=1-pchisq(g.sq, 2*5)
p.val
expected
test.out = chisq.test(ct, correct=FALSE)
test.out$expected
test.out$residuals
col.vec = sqrt(1-apply(ct, 1, sum)/sum(ct))
row.vec = sqrt(1-apply(ct, 2, sum)/sum(ct))
scale.matrix = col.vec %o% row.vec
test.out$residuals / scale.matrix
apply(ct, 1, sum)
apply(ct, 2, sum)
sum(ct)
a=c(1,2,3)
b=c(4,5,6)
a %o% b
apply(ct, 1, sum)
apply(ct, 2, sum)
apply(ct, 1, sum) %o% apply(ct, 2, sum) / sum(ct)
source("testtable.r")
ct = as.table( rbind(c(28, 656), c(18, 658)) )
rownames(ct) = c("Placebo", "Aspirin")
colnames(ct) = c("Yes", "No")
ct
test.table(ct)
ct = as.table( rbind(c(9, 8, 27, 8, 47, 236), c(23, 39, 88, 49, 179, 706),
c(28, 48, 89, 19, 104, 293)) )
colnames(ct)=c("B1", "B2", "B3", "B4", "B5", "B6")
rownames(ct)=c("LH", "HJC", "BG")
ct
test.table(ct)
source("testtable.r")
source("C:\\Users\\Shrivatav\\Desktop\\UMN\\Homework\\Fall 2018\\Analysis of Categorical Data\\Homework 3\\testtable.r")
ct = as.table( rbind(c(28, 656), c(18, 658)) )
ct
rownames(ct) = c("Placebo", "Aspirin")
colnames(ct) = c("Yes", "No")
ct
ct[1,1]*ct[2,2]/(ct[2,1]*ct[1,2])
log(ct[1,1]*ct[2,2]/(ct[2,1]*ct[1,2]))
sor=function(ct)
{
val=ct[1,1]*ct[2,2]/(ct[2,1]*ct[1,2])
return(val)
}
sor(ct)
log(sor(ct))
samp.lor=log(sor(ct))
moe=qnorm(0.975)*sqrt(sum(1/ct))
CI = c(samp.lor - moe, samp.lor + moe)
CI
exp(CI)
ct = as.table( rbind(c(9, 8, 27, 8, 47, 236), c(23, 39, 88, 49, 179, 706),
c(28, 48, 89, 19, 104, 293) ))
colnames(ct)=c("B1", "B2", "B3", "B4", "B5", "B6")
rownames(ct)=c("LH", "HJC", "BG")
ct
chisq.test(ct, correct=FALSE)
expected = apply(ct, 1, sum) %o% apply(ct, 2, sum) / sum(ct)
g.sq = 2*sum( ct * log(ct/expected) )
g.sq
p.val=1-pchisq(g.sq, 2*5)
p.val
expected
test.out = chisq.test(ct, correct=FALSE)
test.out$expected
test.out$residuals
col.vec = sqrt(1-apply(ct, 1, sum)/sum(ct))
row.vec = sqrt(1-apply(ct, 2, sum)/sum(ct))
scale.matrix = col.vec %o% row.vec
test.out$residuals / scale.matrix
apply(ct, 1, sum)
apply(ct, 2, sum)
sum(ct)
a=c(1,2,3)
b=c(4,5,6)
a %o% b
apply(ct, 1, sum)
apply(ct, 2, sum)
apply(ct, 1, sum) %o% apply(ct, 2, sum) / sum(ct)
source("C:\\Users\\Shrivatav\\Desktop\\UMN\\Homework\\Fall 2018\\Analysis of Categorical Data\\Homework 3\\testtable.r")
ct = as.table( rbind(c(28, 656), c(18, 658)) )
rownames(ct) = c("Placebo", "Aspirin")
colnames(ct) = c("Yes", "No")
ct
test.table(ct)
ct = as.table( rbind(c(9, 8, 27, 8, 47, 236), c(23, 39, 88, 49, 179, 706),
c(28, 48, 89, 19, 104, 293)) )
colnames(ct)=c("B1", "B2", "B3", "B4", "B5", "B6")
rownames(ct)=c("LH", "HJC", "BG")
ct
test.table(ct)
install.packages("devtools")
install.packages("roxygen2")
devtools::create("myfirstpackage")
setwd("./cats")
devtools::document()
setwd("./myfirstpackage")
devtools::document()
setwd("..")
install("cats")
install("myfirstpackage")
devtools::install("myfirstpackage")
cat_function(FALSE)
cat_function()
cat_function(T)
cat_function(G)
source('~/mountain_rough.R')
v1 = runif(50, 0, 1)
v2 = runif(50, 0, 1)
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
library(magrittr)
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
v4 <- runif(55, 0, 1)
mountain_plot(v1, v4)
mountain_plot(v1, v2)
mountain_plot(10, 20)
lm(2, 5)
?is.vector
is.vector(v1, mode = "numeric")
is.vector(v4, mode = "numeric")
v4
is.vector(5, mode = "numeric")
is.vector("5", mode = "numeric")
is.vector(c("ss","dd"), mode = "numeric")
source('~/mountain_rough.R')
mountain_plot(10, 20)
mountain_plot(v1, v4)
mountain_plot(v1, 45)
mountain_plot(v1, "45")
mountain_plot(c(10,11), c(20,21))
mountain_plot(c(10,11,5), c(20,21,25))
mountain_plot(c(10,15,25,40), c(10.5,14.6,25.2,41.6))
mountain_plot(c(10,15,25,40,50.5), c(10.5,14.6,25.2,41.6,50.2))
mountain_plot(v1, v4)
mountain_plot(v1, v2)
file.exists("~/.ssh/id_rsa.pub")
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
source('~/mountain_rough.R')
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
mountain_plot(v1, v2)
source('~/mountain_rough.R')
mountain_plot(v1, v2)
mountain_plot(v1, v2, "plotly")
source('~/mountain_rough.R')
mountain_plot(v1, v2)
mountain_plot(v1, v2, "plotly")
mountain_plot(v1, v2)
mountain_plot(v1, v2)
mountain_plot(v1, v2, "plotly")
mountain_plot(v1, v2, "plotly")
mountain_plot(v1, v2, "plot")
source('~/mountain_rough.R')
mountain_plot(v1, v2, "plot")
source('~/mountain_rough.R')
mountain_plot(v1, v2, "plot")
mountain_plot(v1, v2, "plotl")
mountain_plot(v1, v2, "plotly")
mountainplot::mountainplot(v1, v2)
install.packages("mountainplot")
mountainplot::mountainplot(v1, v2)
library(mountainplot)
mountainplot(v1, v2)
source('~/mountain_rough.R')
mountainplot(v1, v2, "gg")
source('~/mountain_rough.R')
mountain_plot(v1, v2, "gg")
getwd()
setwd("C:\Users\Shrivatav\Desktop\R\Packages")
setwd("C:\\Users\\Shrivatav\\Desktop\\R\\Packages")
getwd()
devtools::create("difference.plots")
setwd("./difference.plots")
devtools::document()
devtools::document()
devtools::document()
warnings()
warnings()
devtools::document()
warnings()
devtools::document()
warnings()
devtools::document()
